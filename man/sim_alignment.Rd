% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_alignment.R
\name{sim_alignment}
\alias{sim_alignment}
\title{Converts a phylogeny to a random DNA alignment}
\usage{
sim_alignment(phylogeny, alignment_params)
}
\arguments{
\item{phylogeny}{a phylogeny of class \link[ape]{phylo}}

\item{alignment_params}{parameters to simulate an alignment,
as can be created by \link{create_alignment_params}}
}
\value{
an alignment of type \code{DNAbin}
}
\description{
Converts a phylogeny to a random DNA alignment
}
\examples{
library(testthat)

# Create the ancestor's DNA sequence
n_base_pairs <- 4
root_sequence <- create_blocked_dna(length = n_base_pairs)

# How to simulate the alignment
alignment_params <- create_alignment_params(
  root_sequence = root_sequence,
  mutation_rate = 0.1
)

# Create a phylogeny to simulate the DNA sequences on
n_taxa <- 5
phylogeny <- ape::rcoal(n_taxa)

# Simulate the alignment
alignment <- sim_alignment(
   phylogeny = phylogeny,
   alignment_params = alignment_params
 )

expect_equal(class(alignment), "DNAbin")
expect_equal(nrow(alignment), n_taxa)
expect_equal(ncol(alignment), n_base_pairs)

# Use all different site models
for (site_model in create_site_models()) {
  alignment_params <- create_alignment_params(
    root_sequence = root_sequence,
    mutation_rate = 0.1,
    site_model = site_model
  )
  expect_silent(
    sim_alignment(
      phylogeny = phylogeny,
      alignment_params = alignment_params
    )
  )
}
}
\seealso{
Use \link{sim_alignment_file} to save the simulated alignment
  directly to a file
}
\author{
RichÃ¨l J.C. Bilderbeek, Giovanni Laudanno
}
